version: '3.8'

services:
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=dev
      - PORT=8000
      - LOG_LEVEL=INFO
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=app
      - DB_PASSWORD=app_pw
      - DB_NAME=pr_orchestrator
      - REDIS_URL=redis://redis:6379/0
      - ENABLE_TREESITTER=false
      - MAX_PATCH_BYTES=400000
    depends_on:
      - db
      - redis
    volumes:
      - ./backend/app:/app/app
      - ./config/example.env:/app/.env
    networks:
      - pr-orchestrator

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: rq worker pr_analysis --url redis://redis:6379/0
    environment:
      - APP_ENV=dev
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=app
      - DB_PASSWORD=app_pw
      - DB_NAME=pr_orchestrator
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - ./backend/app:/app/app
      - ./config/example.env:/app/.env
    networks:
      - pr-orchestrator

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=pr_orchestrator
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app_pw
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - pr-orchestrator

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - pr-orchestrator

volumes:
  postgres_data:
  redis_data:

networks:
  pr-orchestrator:
    driver: bridge